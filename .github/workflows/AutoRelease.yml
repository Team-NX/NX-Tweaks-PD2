# AutoRelease workflow to listen for tag creation & automatically upload a new release
name: AutoRelease

# run workflow on new version tag creation
on:
  push:
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+"

env:
  SOLUTION_FILE_PATH: ./NX-Tweaks-Lib/NX-Tweaks-Lib.sln
  BUILD_CONFIGURATION: Release

# actual workflow
jobs:
  # build the library required for release
  build:
    name: Build
    runs-on: windows-latest

    steps:
    #######
    - name: Checking out repository
      uses: actions/checkout@v2
    
    #######
    - name: Add MSBuild to PATH
      uses: microsoft/setup-msbuild@v1.0.2
    
    #######
    - name: Build
      working-directory: ${{env.GITHUB_WORKSPACE}}
      # Add additional options to the MSBuild command line here (like platform or verbosity level).
      # See https://docs.microsoft.com/visualstudio/msbuild/msbuild-command-line-reference
      run: msbuild /m /p:Configuration=${{env.BUILD_CONFIGURATION}} ${{env.SOLUTION_FILE_PATH}}
    
    #######
    - name: Uploading NX-Tweaks-Lib to Artifacts
      uses: actions/upload-artifact@v2
      with:
        name: NX-Tweaks-Lib
        path: NX-Tweaks/NX-Tweaks-Lib.dll
  
  # create a new release with the built library
  release:
    name: Release
    needs: build
    runs-on: ubuntu-latest
    
    steps:
      #######
      - name: Checking out repository
        uses: actions/checkout@v2
      
      #######
      - name: Extracting version from references
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_ENV
      
      #######
      - name: Updating 'version' in 'mod.txt'
        uses: actions/github-script@v4
        with:
          script: |
            const fs = require("fs")
            
            const modFileName = "./NX-Tweaks/mod.txt"
            const modFile = fs.readFileSync(modFileName)
            const modData = JSON.parse(modFile)
            
            modData.version = "${{ env.VERSION }}"
            
            fs.writeFileSync(modFileName, JSON.stringify(modData, null, "\t"))
      
      #######
      - name: Downloading NX-Tweaks-Lib from Artifacts
        uses: actions/download-artifact@v2
        with:
          name: NX-Tweaks-Lib
          path: NX-Tweaks/NX-Tweaks-Lib.dll
      
      #######
      - name: Archiving 'NX-Tweaks' folder
        run: zip -r NX-Tweaks.zip NX-Tweaks
      
      #######
      - name: Publishing a new release with 'NX-Tweaks.zip'
        uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "v${{ env.VERSION }}"
          prerelease: false
          title: "Release v${{ env.VERSION }}"
          files: NX-Tweaks.zip
      
      #######
      - name: Switching branch to 'update'
        run: |
          git reset --hard
          git fetch
          git checkout update
      
      #######
      - name: Updating 'meta.json'
        uses: actions/github-script@v4
        with:
          script: |
            const fs = require("fs")
            
            const data = [{
              "ident": "nx-tweaks",
              "version": "${{ env.VERSION }}",
              "download_url": "https://github.com/Team-NX/NX-Tweaks-PD2/releases/download/v${{ env.VERSION }}/NX-Tweaks.zip",
              "patchnotes_url": "https://github.com/Team-NX/NX-Tweaks-PD2/releases/latest"
            }]
            
            fs.writeFileSync("meta.json", JSON.stringify(data, null, "\t"))
      
      #######
      - name: Pushing file changes
        run: |
          git config user.email "nx@lunati.cc"
          git config user.name "NX"
          git add meta.json
          git commit -m "Updated to v${{ env.VERSION }}"
          git push
